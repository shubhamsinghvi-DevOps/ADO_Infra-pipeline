parameters:
- name: env 

stages: 
- stage: TerraformInitplan
  displayName: Terraform Init and Plan
  jobs:
    - task: CmdLine@2
      inputs:
        script: 'checkov -d . -o junitxml --output-file-path $(System.DefaultWorkingDirectory)/result.xml'
        workingDirectory: '$(System.DefaultWorkingDirectory)/Module/2_storage_account'
    
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: 'result.xml'    
  
#   - job: Terraform_Init_plan
#     displayName: Terraform Init Plan
#     steps:
#     - task: TerraformTask@5
#       inputs:
#         provider: 'azurerm'
#         command: 'init'
#         workingDirectory: '$(WORK_DIR)'
#         backendAzureRmUseEntraIdForAuthentication: false
#         backendServiceArm: 'Azure_Github_Resources'
#         backendAzureRmOverrideSubscriptionID: '6b38de24-6577-4220-8a9e-3ddcaa335ffc'
#         backendAzureRmResourceGroupName: 'RG_Practice1'
#         backendAzureRmStorageAccountName: 'shubhamsinghvi40342411'
#         backendAzureRmContainerName: 'finaltest'
#         backendAzureRmKey: '${{parameters.env}}.terraform.tfstate'

#     - task: TerraformTask@5
#       inputs:
#         provider: 'azurerm'
#         command: 'plan'
#         workingDirectory: '$(WORK_DIR)'
#         commandOptions: '--var-file=dev.terraform.tfvars'
#         environmentServiceNameAzureRM: 'Azure_Github_Resources'
    
# - stage: TerraformInitapply
#   dependsOn: TerraformInitplan
#   displayName: Terraform Init and Apply
#   condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'main'))
  
#   jobs:
#   - job: ManualValidation
#     displayName: Validation Befor apply
#     pool: server
#     steps: 
#     - task: ManualValidation@1
#       inputs:
#         notifyUsers: 'shubhamsinghvi8696@gmail.com'
#         instructions: 'PLease validate Terraform plan'

#   - job: TwrraformApply
#     dependsOn: ManualValidation
#     displayName: Terraform apply
#     steps:       
#     - task: TerraformTask@5
#       displayName: Terraform Init
#       inputs:
#         provider: 'azurerm'
#         command: 'init'
#         workingDirectory: '$(WORK_DIR)'
#         commandOptions: '-upgrade'
#         backendAzureRmUseEntraIdForAuthentication: false
#         backendServiceArm: 'Azure_Github_Resources'
#         backendAzureRmOverrideSubscriptionID: '6b38de24-6577-4220-8a9e-3ddcaa335ffc'
#         backendAzureRmResourceGroupName: 'RG_Practice1'
#         backendAzureRmStorageAccountName: 'shubhamsinghvi40342411'
#         backendAzureRmContainerName: 'finaltest'
#         backendAzureRmKey: '${{parameters.env}}.terraform.tfstate'

#     - task: TerraformTask@5
#       inputs:
#         provider: 'azurerm'
#         command: 'apply'
#         workingDirectory: '$(WORK_DIR)'
#         commandOptions: '--var-file=${{parameters.env}}.terraform.tfvars'
#         environmentServiceNameAzureRM: 'Azure_Github_Resources'